/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.print.PrinterException;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import modelo.Conexion;
//import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.ModVentas;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.awt.Graphics;
import java.awt.Image;

import javax.swing.ImageIcon;
import javax.swing.JPanel;


/**
 *
 * @author usuario
 */
public class ventas extends javax.swing.JFrame {

     FondoPanel fondo = new FondoPanel();
     
    public ventas() {
        this.setContentPane(fondo);
        initComponents();
        //this.setTitle("Menu Ventas");
        //this.setLocationRelativeTo(null);
        MostrarTablaVentas();
        MostrarTablaDestinosDespacho();
        MostrarTablaEstadosDespacho();
        AgregarItemComboBoxBanco();
        AgregarItemCombBoxEstadoVenta();
        AgregarItemComboBoxPack();
        AgregarItemComboBoxComuna();
        AgregarItemComboBoxRRSS();
        AgregarItemComboBoxEdoEntrega();
        txtIdRRSS.setVisible(false);
        txtPack.setVisible(false);
        txtComunas.setVisible(false);
        txtHoraIni.setVisible(false);
        txtHoraFin.setVisible(false);
        txtCostoPack.setVisible(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    //Metodos para mostrar tablas de BBDD
    private void MostrarTablaVentas(){
        //Tabla de Ventas
        try{    
            DefaultTableModel modelo1 = new DefaultTableModel();
            
            tableVentas.setModel(modelo1);
            TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(modelo1);
            tableVentas.setRowSorter(elQueOrdena);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            
            String sql = "SELECT venta.idventa, venta.rut_cliente, cliente.cli_nombre, cliente.cli_telefono, venta.vta_fecha_venta, pack.pck_costo, pack.pck_nombre, venta.vta_codigo_transferencia, banco.ban_nombre, estados_venta.est_descripcion FROM venta JOIN cliente ON venta.rut_cliente = cliente.RUT JOIN pack ON venta.id_pack = pack.idpack JOIN estados_venta ON venta.id_estados_venta = estados_venta.idestados_venta JOIN banco ON venta.id_banco = banco.idbanco";
            
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
            modelo1.addColumn("Numero Pedido");
            modelo1.addColumn("RUT Cliente");
            modelo1.addColumn("Nombre Cliente");
            modelo1.addColumn("Numero Teléfono");
            modelo1.addColumn("Fecha Venta");
            modelo1.addColumn("Monto");
            modelo1.addColumn("Pack");
            modelo1.addColumn("Cod Transferencia");
            modelo1.addColumn("Banco");
            modelo1.addColumn("Estado");
            
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modelo1.addRow(filas); 
            }
            
            rs.close();

        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        
    }
    
    private void MostrarTablaDestinosDespacho(){
        //Mostrar TableDestinosDespacho
        try{    
            DefaultTableModel modelo1 = new DefaultTableModel();
            
            TableDestinosDespacho.setModel(modelo1);
            //TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(modelo1);
            //TableDestinosDespacho.setRowSorter(elQueOrdena);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            
            String sql = "SELECT venta.idventa, pack.pck_nombre, venta.vta_nombre_destinatario, venta.vta_fecha_entrega, comunas.nombre_comunas, venta.vta_direccion_destinatario, venta.vta_hora_entrega_inicial FROM venta JOIN pack ON venta.id_pack = pack.idpack JOIN comunas ON venta.id_comuna = comunas.idcomunas WHERE (venta.id_estados_venta = '2')";
            
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
            modelo1.addColumn("Id Pedido");
            modelo1.addColumn("Pack");
            modelo1.addColumn("Destinatario");
            modelo1.addColumn("Fecha Entrega");
            modelo1.addColumn("Comuna");
            modelo1.addColumn("Direccion");
            modelo1.addColumn("Hora Entrega");
            
            
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modelo1.addRow(filas); 
            }
            
            rs.close();

        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }
    
    //Metodo para descargar tabla Destinos
    private void descargarTablaDestinosDespacho(){
        //Definimos modelos de la Tabla con los datos
        DefaultTableModel modelo1 = new DefaultTableModel();
        modelo1 = (DefaultTableModel) TableDestinosDespacho.getModel();
        
        //definimos las variables con las vamos hacer la exportacion por Libreria netbeans
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;
        
        //Selecciona locación para descargar
        JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\usuario\\Desktop");
        //Nombre de cuadro de dialogo
        excelFileChooser.setDialogTitle("Salvar como");
        //Solo extensiona validas de excel para descargar
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        //Muesta el cuadro de dialogo
        int excelChooser = excelFileChooser.showSaveDialog(null);
        
        //Si el boton Salvar del cuadro de diáloo es apretado
        if(excelChooser == JFileChooser.APPROVE_OPTION){
            try{
                //instanciamos excel poi libreria a netbeans
                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("Destinos Despacho");
                
                //Agregamos los nombres de las columnas
                XSSFRow rowCol = excelSheet.createRow(0);
                for(int i=0; i<modelo1.getColumnCount();i++){
                    XSSFCell cell = rowCol.createCell(i);
                    cell.setCellValue(modelo1.getColumnName(i));
                }
                
                //usar un loop para obtener filas y columnas de la Jtable
                for(int j=0; j<modelo1.getRowCount(); j++){
                    XSSFRow excelRow = excelSheet.createRow(j+1);
                    for(int k=0; k < modelo1.getColumnCount(); k++){
                        XSSFCell excelCell = excelRow.createCell(k);
                        excelCell.setCellValue(modelo1.getValueAt(j, k).toString());
                    }
                }
                //Agregar extención xlsx al fichero excel
                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile()+".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Tabla Descargada Exitosamente!!");
            }catch(FileNotFoundException ex){
                //ex.printStackTrace();
                System.err.println(ex.toString());
            } catch (IOException ex) {
                Logger.getLogger(ventas.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try{
                    if(excelBOU != null){
                        excelBOU.close();
                    }
                    if(excelFOU != null){
                        excelFOU.close();
                    }
                    if(excelJTableExporter != null){
                        excelJTableExporter.close();
                    }
                }catch(IOException ex){
                    //ex.printStackTrace();
                    System.err.println(ex.toString());
                }
            }
        }
        
    }
    
    
    //Metodo para descargar tabla Estados Despacho
    private void descargarTablaEstadoDespacho(){
        //Definimos modelos de la Tabla con los datos
        DefaultTableModel modelo1 = new DefaultTableModel();
        modelo1 = (DefaultTableModel) TableEstadoDespacho.getModel();
        
        //definimos las variables con las vamos hacer la exportacion por Libreria netbeans
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;
        
        //Selecciona locación para descargar
        JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\usuario\\Desktop");
        //Nombre de cuadro de dialogo
        excelFileChooser.setDialogTitle("Salvar como");
        //Solo extensiona validas de excel para descargar
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        //Muesta el cuadro de dialogo
        int excelChooser = excelFileChooser.showSaveDialog(null);
        
        //Si el boton Salvar del cuadro de diáloo es apretado
        if(excelChooser == JFileChooser.APPROVE_OPTION){
            try{
                //instanciamos excel poi libreria a netbeans
                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("Estados Despacho");
                
                //Agregamos los nombres de las columnas
                XSSFRow rowCol = excelSheet.createRow(0);
                for(int i=0; i<modelo1.getColumnCount();i++){
                    XSSFCell cell = rowCol.createCell(i);
                    cell.setCellValue(modelo1.getColumnName(i));
                }
                
                //usar un loop para obtener filas y columnas de la Jtable
                for(int j=0; j<modelo1.getRowCount(); j++){
                    XSSFRow excelRow = excelSheet.createRow(j+1);
                    for(int k=0; k < modelo1.getColumnCount(); k++){
                        XSSFCell excelCell = excelRow.createCell(k);
                        excelCell.setCellValue(modelo1.getValueAt(j, k).toString());
                    }
                }
                //Agregar extención xlsx al fichero excel
                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile()+".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Tabla Descargada Exitosamente!!");
            }catch(FileNotFoundException ex){
                //ex.printStackTrace();
                System.err.println(ex.toString());
            } catch (IOException ex) {
                Logger.getLogger(ventas.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try{
                    if(excelBOU != null){
                        excelBOU.close();
                    }
                    if(excelFOU != null){
                        excelFOU.close();
                    }
                    if(excelJTableExporter != null){
                        excelJTableExporter.close();
                    }
                }catch(IOException ex){
                    //ex.printStackTrace();
                    System.err.println(ex.toString());
                }
            }
        }
        
    }
    
    
    private void MostrarTablaEstadosDespacho(){
        //Mostrar TableEstadoDespacho
        try{    
            DefaultTableModel modelo1 = new DefaultTableModel();
            
            TableEstadoDespacho.setModel(modelo1);
            //TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(modelo1);
            //TableEstadoDespacho.setRowSorter(elQueOrdena);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            
            String sql = "SELECT venta.idventa, pack.pck_nombre, venta.vta_nombre_destinatario, venta.vta_fecha_entrega, comunas.nombre_comunas, venta.vta_direccion_destinatario, venta.vta_hora_entrega_inicial, estados_despacho.estados_despacho_name FROM venta JOIN pack ON venta.id_pack = pack.idpack JOIN comunas ON venta.id_comuna = comunas.idcomunas JOIN estados_despacho ON venta.estado_despacho = estados_despacho.idestados_despacho WHERE (venta.id_estados_venta = '2')";
            
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
            modelo1.addColumn("Id Pedido");
            modelo1.addColumn("Pack");
            modelo1.addColumn("Destinatario");
            modelo1.addColumn("Fecha Entrega");
            modelo1.addColumn("Comuna");
            modelo1.addColumn("Direccion");
            modelo1.addColumn("Hora Entrega");
            modelo1.addColumn("Estado Despacho");
            
            
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modelo1.addRow(filas); 
            }
            
            rs.close();

        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        
    }
    
    //Metodo para buscar en tabla Deestinos despacho por fecha
    public DefaultTableModel buscarDestinosDespacho(String buscarfecha){
        DefaultTableModel modelo1 = new DefaultTableModel();
        TableDestinosDespacho.setModel(modelo1);
        PreparedStatement ps = null;
        ResultSet rs = null;
        Conexion conn = new Conexion();
        Connection con = conn.getConexion();
        String sql = "SELECT venta.idventa, pack.pck_nombre, venta.vta_nombre_destinatario, venta.vta_fecha_entrega, comunas.nombre_comunas, venta.vta_direccion_destinatario, venta.vta_hora_entrega_inicial FROM venta JOIN pack ON venta.id_pack = pack.idpack JOIN comunas ON venta.id_comuna = comunas.idcomunas WHERE (venta.id_estados_venta = '2') AND (venta.vta_fecha_entrega LIKE '%"+buscarfecha+"%')";
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
            modelo1.addColumn("Id Pedido");
            modelo1.addColumn("Pack");
            modelo1.addColumn("Destinatario");
            modelo1.addColumn("Fecha Entrega");
            modelo1.addColumn("Comuna");
            modelo1.addColumn("Direccion");
            modelo1.addColumn("Hora Entrega");
            
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modelo1.addRow(filas); 
            }
            
            rs.close();
            
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        return null;
    }
    
    
    //Metodo para buscar en tabla Actualizacion Deestinos despacho por fecha
    public DefaultTableModel buscarEstadosDespacho(String buscarfecha){
        DefaultTableModel modelo1 = new DefaultTableModel();
        TableEstadoDespacho.setModel(modelo1);
        PreparedStatement ps = null;
        ResultSet rs = null;
        Conexion conn = new Conexion();
        Connection con = conn.getConexion();
        String sql = "SELECT venta.idventa, pack.pck_nombre, venta.vta_nombre_destinatario, venta.vta_fecha_entrega, comunas.nombre_comunas, venta.vta_direccion_destinatario, venta.vta_hora_entrega_inicial, estados_despacho.estados_despacho_name FROM venta JOIN pack ON venta.id_pack = pack.idpack JOIN comunas ON venta.id_comuna = comunas.idcomunas JOIN estados_despacho ON venta.estado_despacho = estados_despacho.idestados_despacho WHERE (venta.id_estados_venta = '2') AND (venta.vta_fecha_entrega LIKE '%"+buscarfecha+"%')";
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
            modelo1.addColumn("Id Pedido");
            modelo1.addColumn("Pack");
            modelo1.addColumn("Destinatario");
            modelo1.addColumn("Fecha Entrega");
            modelo1.addColumn("Comuna");
            modelo1.addColumn("Direccion");
            modelo1.addColumn("Hora Entrega");
            modelo1.addColumn("Estado Despacho");
            
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modelo1.addRow(filas); 
            }
            
            rs.close();
            
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        return null;
    }
    
    
    
    private void AgregarItemComboBoxBanco(){
        //Agregar datos al ComboBOXBanco
        ComboBoxBanco.addItem("Seleccione Uno");
        ArrayList<String> cc = new ArrayList<String>();
        cc = ModVentas.MostrarListadoBanco();
        for (int i=0; i<cc.size();i++){
            ComboBoxBanco.addItem(cc.get(i));
        }
    }
    
    private void AgregarItemCombBoxEstadoVenta(){
        //Agregar datos al ComboBoxEstadosVenta
        ComboBoxEstadosVenta.addItem("Seleccione Uno");
        ArrayList<String> vv = new ArrayList<String>();
        vv = ModVentas.MostrarListadoEstadosVenta();
        for (int i=0; i<vv.size();i++){
            ComboBoxEstadosVenta.addItem(vv.get(i));
        }
    }
    
    private void AgregarItemComboBoxPack(){
        //Agregar datos al ComboBoxPack
        ComboBoxPack.addItem("Seleccione Uno");
        ArrayList<String> pp = new ArrayList<String>();
        pp = ModVentas.MostrarListadoPack();
        for (int i=0; i<pp.size();i++){
            ComboBoxPack.addItem(pp.get(i));
        }
    }
    
    private void AgregarItemComboBoxComuna(){
        //Agregar datos al ComboBoxComuna
        ComboBoxComuna.addItem("Seleccione Uno");
        ArrayList<String> co = new ArrayList<String>();
        co = ModVentas.MostrarListadoComuna();
        for (int i=0; i<co.size();i++){
            ComboBoxComuna.addItem(co.get(i));
        }
        
    }
    
    private void AgregarItemComboBoxRRSS(){
        //Agregar datos al ComboBoxRRSS
        ComboBoxRRSS.addItem("Seleccione Uno");
        ArrayList<String> rrss = new ArrayList<String>();
        rrss = ModVentas.MostrarListadoRRSS();
        for (int i=0; i<rrss.size();i++){
            ComboBoxRRSS.addItem(rrss.get(i));
        }
    }
    
    private void AgregarItemComboBoxEdoEntrega(){
        //Agregar datos al ComboBoxRRSS
        ComboBoxEdoEntrega.addItem("Seleccione Uno");
        ArrayList<String> edo = new ArrayList<String>();
        edo = ModVentas.MostrarListadoEdoEntrega();
        for (int i=0; i<edo.size();i++){
            ComboBoxEdoEntrega.addItem(edo.get(i));
        }
    }
    
    //Metodo para agregar Id del comboBox
    public void traerIdrrss(){
        //Tarer id de RRSS
        try{
            String categoria = (String) ComboBoxRRSS.getSelectedItem();
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            String sql ="SELECT idrrss FROM rrss WHERE (rrss_nombre = '"+categoria+"')";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while(rs.next()){    
                txtIdRRSS.setText(String.valueOf(rs.getString("idrrss")));
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        
    }
    
    public void traerIdPack(){
        //Tarer id de Packs
        try{
            String categoria = (String) ComboBoxPack.getSelectedItem();
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            String sql ="SELECT * FROM pack WHERE (pck_nombre = '"+categoria+"')";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while(rs.next()){    
                txtPack.setText(String.valueOf(rs.getString("idpack")));
                TextAreaVentas.append("Pack Seleccionado: " + rs.getString("pck_nombre"));
                TextAreaVentas.append(System.getProperty("line.separator"));
                TextAreaVentas.append(System.getProperty("line.separator"));
                txtCostoPack.setText(rs.getString("pck_costo"));
                TextAreaVentas.append("TOTAL:  " + rs.getString("pck_costo"));
            }
            TextAreaVentas.setEditable(false);
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        
    }
    
    public void traerIdComunas(){
        //Tarer id de Comuna
        try{
            String categoria = (String) ComboBoxComuna.getSelectedItem();
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            String sql ="SELECT idcomunas FROM comunas WHERE (nombre_comunas = '"+categoria+"')";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while(rs.next()){    
                txtComunas.setText(String.valueOf(rs.getString("idcomunas")));
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        
    }
    
    //Metodo para buscar Cliente en pestaña Ventas
    public void traerClientes(){
        
        try{
            String valor = (String) txtRutCliente.getText();
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            String sql ="SELECT * FROM cliente WHERE (RUT = '"+valor+"')";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while(rs.next()){    
                txtNomCliente.setText(rs.getString("cli_nombre") + " " + rs.getString("cli_apellido"));
                txtEmailCliente.setText(rs.getString("cli_mail"));
                txtTlfCliente.setText(String.valueOf(rs.getString("cli_telefono")));
            }
            
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    
    }
    
    
    //Metodo para buscar Cliente en pestaña Confirmación
    public void traerClientesConfirmación(){
        
        try{
            String valor1 = (String) txtRutClienteConfirmacion.getText();
            String valor2 = (String) txtPedidoConfirmacion.getText();
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            //String sql ="SELECT * FROM cliente WHERE (RUT = '"+valor1+"')";
            String sql = "SELECT venta.idventa, venta.rut_cliente, cliente.cli_nombre, cliente.cli_apellido, venta.id_banco, venta.id_estados_venta FROM venta JOIN cliente ON venta.rut_cliente = cliente.RUT WHERE (venta.rut_cliente = '"+valor1+"') OR (venta.idventa = '"+valor2+"')";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while(rs.next()){
                txtPedidoConfirmacion.setText(String.valueOf(rs.getString("idventa")));
                txtRutClienteConfirmacion.setText(rs.getString("rut_cliente"));
                txtNombreClienteConfirmacion.setText(rs.getString("cli_nombre") + " " + rs.getString("cli_apellido"));
                ComboBoxBanco.setSelectedIndex(Integer.parseInt(rs.getString("id_banco")));
                ComboBoxEstadosVenta.setSelectedIndex(Integer.parseInt(rs.getString("id_estados_venta")));
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    
    }
    
    //Metodo para llamar datos de la tabla tableVentas en Confirmación
    public void llamarDatostableVentas(){
        try{
            int fila = tableVentas.getSelectedRow();
            int ID = (int) tableVentas.getValueAt(fila, 0);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            
            String sql = "SELECT venta.idventa, venta.rut_cliente, cliente.cli_nombre, cliente.cli_apellido, venta.id_banco, venta.id_estados_venta FROM venta JOIN cliente ON venta.rut_cliente = cliente.RUT WHERE (venta.idventa = ?)";
            
            ps = con.prepareStatement(sql);
            ps.setInt(1, ID);
            rs = ps.executeQuery();
            
            while(rs.next()){
                txtPedidoConfirmacion.setText(String.valueOf(rs.getString("idventa")));
                txtRutClienteConfirmacion.setText(rs.getString("rut_cliente"));
                txtNombreClienteConfirmacion.setText(rs.getString("cli_nombre") + " " + rs.getString("cli_apellido"));
                ComboBoxBanco.setSelectedIndex(Integer.parseInt(rs.getString("id_banco")));
                ComboBoxEstadosVenta.setSelectedIndex(Integer.parseInt(rs.getString("id_estados_venta")));
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        
    }
    
    //Metodo para llamar datos de la tabla TableEstadoDespacho en Actualización Despachos
    public void llamarDatosEstadoDespacho(){
        try{
            int fila = TableEstadoDespacho.getSelectedRow();
            int ID = (int) TableEstadoDespacho.getValueAt(fila, 0);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            
            String sql = "SELECT idventa, estado_despacho FROM venta WHERE (idventa = ?)";
            
            ps = con.prepareStatement(sql);
            ps.setInt(1, ID);
            rs = ps.executeQuery();
            
            while(rs.next()){
                txtIdPedidoDespacho.setText(String.valueOf(rs.getString("idventa")));
                ComboBoxEdoEntrega.setSelectedIndex(Integer.parseInt(rs.getString("estado_despacho")));
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        
    }
    
    
    
    
    public void tomarItemHoraInicio(){
        String horaIni = (String) ComboBoxHoraInicio.getSelectedItem();
        txtHoraIni.setText(horaIni);
        
    }
    
    public void tomarItemHoraFin(){
        String horaFin = (String) ComboBoxHoraFinal.getSelectedItem();
        txtHoraFin.setText(horaFin);
        
    }
    
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        btnRegregarMenu = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new FondoPanel();
        jPanel5 = new FondoPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNomCliente = new javax.swing.JTextField();
        txtEmailCliente = new javax.swing.JTextField();
        txtRutCliente = new javax.swing.JTextField();
        txtTlfCliente = new javax.swing.JTextField();
        btnBuscarCliente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ComboBoxRRSS = new javax.swing.JComboBox<>();
        txtIdRRSS = new javax.swing.JTextField();
        jPanel6 = new FondoPanel();
        jLabel8 = new javax.swing.JLabel();
        txtNombreDestinatario = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtDireccionDestinatario = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        ComboBoxComuna = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSaludo = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        ComboBoxPack = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        ComboBoxHoraInicio = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        ComboBoxHoraFinal = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextAreaVentas = new javax.swing.JTextArea();
        FechaEntrega = new com.toedter.calendar.JDateChooser();
        txtComunas = new javax.swing.JTextField();
        txtPack = new javax.swing.JTextField();
        txtHoraIni = new javax.swing.JTextField();
        txtHoraFin = new javax.swing.JTextField();
        txtCostoPack = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        btnRegistrarPedido = new javax.swing.JButton();
        btnLimpiarVenta = new javax.swing.JButton();
        jPanel2 = new FondoPanel();
        jPanel7 = new FondoPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtPedidoConfirmacion = new javax.swing.JTextField();
        txtRutClienteConfirmacion = new javax.swing.JTextField();
        ComboBoxBanco = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtNombreClienteConfirmacion = new javax.swing.JTextField();
        txtCodigoTransferencia = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        btnConfirmarPago = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        fechaPagoConfirmacion = new com.toedter.calendar.JDateChooser();
        btnBuscarConfirmacion = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ComboBoxEstadosVenta = new javax.swing.JComboBox<>();
        btnLimpiarConfirma = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableVentas = new javax.swing.JTable();
        jLabel29 = new javax.swing.JLabel();
        jPanel3 = new FondoPanel();
        jPanel8 = new FondoPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableDestinosDespacho = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        txtBuscarDespacho1 = new javax.swing.JTextField();
        btnImprimirDestinos = new javax.swing.JButton();
        btnDescargarDestinos = new javax.swing.JButton();
        btnLimparDespacho0 = new javax.swing.JButton();
        jPanel4 = new FondoPanel();
        jPanel9 = new FondoPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TableEstadoDespacho = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtBuscarDespacho2 = new javax.swing.JTextField();
        btnImprimirEdoDespacho = new javax.swing.JButton();
        btnDescargarEstados = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtIdPedidoDespacho = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        ComboBoxEdoEntrega = new javax.swing.JComboBox<>();
        jSeparator3 = new javax.swing.JSeparator();
        btnLimpiarDespacho = new javax.swing.JButton();
        btnModificarDespacho = new javax.swing.JButton();

        jScrollPane4.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRegregarMenu.setText("Regresar a Menú Principal");
        btnRegregarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegregarMenuActionPerformed(evt);
            }
        });

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Cliente Solicitado", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel3.setText("Nombre Cliente");

        jLabel4.setText("Email");

        jLabel5.setText("RUT");

        jLabel6.setText("Telefono");

        txtNomCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomClienteActionPerformed(evt);
            }
        });

        txtRutCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutClienteActionPerformed(evt);
            }
        });

        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        jLabel2.setText("RRSS");

        ComboBoxRRSS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxRRSSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(59, 59, 59))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(33, 33, 33))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtRutCliente)
                    .addComponent(txtNomCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(txtEmailCliente, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarCliente)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ComboBoxRRSS, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTlfCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(txtIdRRSS, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRutCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(btnBuscarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTlfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(ComboBoxRRSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdRRSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Destinatario", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel8.setText("Nombre Destinatario");

        jLabel9.setText("Fecha Entrega");

        jLabel10.setText("Dirección");

        jLabel11.setText("Comuna");

        ComboBoxComuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxComunaActionPerformed(evt);
            }
        });

        jLabel12.setText("Saludo");

        txtSaludo.setColumns(20);
        txtSaludo.setRows(5);
        jScrollPane1.setViewportView(txtSaludo);

        jLabel13.setText("PACK");

        ComboBoxPack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxPackActionPerformed(evt);
            }
        });

        jLabel14.setText("Hora Inicio Entrega");

        ComboBoxHoraInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00" }));
        ComboBoxHoraInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxHoraInicioActionPerformed(evt);
            }
        });

        jLabel15.setText("Hora Fin Entrega");

        ComboBoxHoraFinal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00" }));
        ComboBoxHoraFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxHoraFinalActionPerformed(evt);
            }
        });

        TextAreaVentas.setColumns(20);
        TextAreaVentas.setRows(5);
        jScrollPane2.setViewportView(TextAreaVentas);

        FechaEntrega.setDateFormatString("y-MM-dd");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(FechaEntrega, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                        .addComponent(txtNombreDestinatario, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtDireccionDestinatario, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ComboBoxComuna, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(txtPack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)
                                    .addComponent(txtHoraFin, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ComboBoxHoraInicio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ComboBoxHoraFinal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(txtHoraIni, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(ComboBoxPack, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(txtComunas, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCostoPack, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtNombreDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(ComboBoxPack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHoraIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(ComboBoxHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(FechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtDireccionDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(ComboBoxComuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)
                                .addGap(79, 79, 79))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(txtHoraFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComboBoxHoraFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtComunas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCostoPack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );

        jButton3.setText("Cancelar");

        btnRegistrarPedido.setText("Guardar");

        btnLimpiarVenta.setText("Limpiar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLimpiarVenta)
                .addGap(34, 34, 34)
                .addComponent(jButton3)
                .addGap(31, 31, 31)
                .addComponent(btnRegistrarPedido)
                .addGap(92, 92, 92))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 334, Short.MAX_VALUE)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(btnRegistrarPedido)
                    .addComponent(btnLimpiarVenta))
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("Venta", jPanel1);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Confirmación Pago Cliente", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel23.setText("Numero Pedido");

        jLabel24.setText("RUT");

        jLabel25.setText("Banco");

        ComboBoxBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxBancoActionPerformed(evt);
            }
        });

        jLabel26.setText("Nombre Cliente");

        jLabel27.setText("Fecha Pago");

        jLabel28.setText("Codigo Transacción");

        jButton9.setText("Cancelar");

        btnConfirmarPago.setText("Confirmar");
        btnConfirmarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarPagoActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        fechaPagoConfirmacion.setDateFormatString("y-MM-dd");

        btnBuscarConfirmacion.setText("Buscar");
        btnBuscarConfirmacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarConfirmacionActionPerformed(evt);
            }
        });

        jLabel1.setText("Estado de la Venta:");

        btnLimpiarConfirma.setText("Limpiar");
        btnLimpiarConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarConfirmaActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboBoxEstadosVenta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel25)
                            .addGap(53, 53, 53)
                            .addComponent(ComboBoxBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPedidoConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtRutClienteConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel26))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombreClienteConfirmacion)
                                    .addComponent(fechaPagoConfirmacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(12, 12, 12))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCodigoTransferencia)
                                .addContainerGap())))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(btnLimpiarConfirma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton9)
                        .addGap(16, 16, 16)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConfirmarPago)
                        .addGap(52, 52, 52))))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(btnBuscarConfirmacion)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(txtPedidoConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(txtRutClienteConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(txtNombreClienteConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(fechaPagoConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(btnBuscarConfirmacion)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(ComboBoxBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel28)
                        .addComponent(txtCodigoTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnLimpiarConfirma, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton9)
                                    .addComponent(btnConfirmarPago)))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(ComboBoxEstadosVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))))
        );

        tableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Numero Pedido", "RUT  Cliente", "Nombre Cliente", "Numero Teléfono", "Fecha Pedido", "Monto", "Pack", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableVentasMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tableVentas);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setText("Estado de las Ventas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel29)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Confirmación", jPanel2);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Despacho", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Lista destinos para Despacho por día");

        TableDestinosDespacho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id de Venta", "Pack", "Destinatario", "Fecha Entrega", "Comuna", "Direccion", "Hora Entrega"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TableDestinosDespacho);

        jLabel19.setText("Buscar por fecha:");

        txtBuscarDespacho1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarDespacho1KeyReleased(evt);
            }
        });

        btnImprimirDestinos.setText("Imprimir");
        btnImprimirDestinos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirDestinosActionPerformed(evt);
            }
        });

        btnDescargarDestinos.setText("Descargar");
        btnDescargarDestinos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarDestinosActionPerformed(evt);
            }
        });

        btnLimparDespacho0.setText("Limpiar");
        btnLimparDespacho0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparDespacho0ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addGap(24, 24, 24)
                .addComponent(txtBuscarDespacho1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnLimparDespacho0)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImprimirDestinos)
                .addGap(51, 51, 51)
                .addComponent(btnDescargarDestinos)
                .addGap(112, 112, 112))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel17)
                .addGap(41, 41, 41)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtBuscarDespacho1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimparDespacho0))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimirDestinos)
                    .addComponent(btnDescargarDestinos))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lista Destinos", jPanel3);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Despacho", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        TableEstadoDespacho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Numero Pedido", "Pack", "Destinatario", "Fecha de Entrega", "Comuna", "Hora de entrega", "Estado de Entrega"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableEstadoDespacho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableEstadoDespachoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(TableEstadoDespacho);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("Actualización Estado del Despacho");

        jLabel22.setText("Buscar por fecha:");

        txtBuscarDespacho2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarDespacho2KeyReleased(evt);
            }
        });

        btnImprimirEdoDespacho.setText("Imprimir");
        btnImprimirEdoDespacho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirEdoDespachoActionPerformed(evt);
            }
        });

        btnDescargarEstados.setText("Descargar");
        btnDescargarEstados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarEstadosActionPerformed(evt);
            }
        });

        jLabel7.setText("Numero Pedido");

        jLabel16.setText("Estado de la Entrega");

        ComboBoxEdoEntrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxEdoEntregaActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnLimpiarDespacho.setText("Limpiar");
        btnLimpiarDespacho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarDespachoActionPerformed(evt);
            }
        });

        btnModificarDespacho.setText("Modificar");
        btnModificarDespacho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarDespachoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImprimirEdoDespacho)
                .addGap(53, 53, 53)
                .addComponent(btnDescargarEstados)
                .addGap(102, 102, 102))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtIdPedidoDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel22)
                                .addGap(18, 18, 18)
                                .addComponent(txtBuscarDespacho2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBoxEdoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(btnLimpiarDespacho)
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnModificarDespacho)))))
                .addGap(63, 63, 63))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtIdPedidoDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(ComboBoxEdoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnModificarDespacho))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(txtBuscarDespacho2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnLimpiarDespacho)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnImprimirEdoDespacho)
                            .addComponent(btnDescargarEstados))))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Actualización Despacho", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnRegregarMenu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRegregarMenu)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegregarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegregarMenuActionPerformed
        // TODO add your handling code here:
        menu menuppal = new menu();
        
        menuppal.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegregarMenuActionPerformed

    private void txtRutClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRutClienteActionPerformed

    private void txtNomClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomClienteActionPerformed

    private void ComboBoxBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxBancoActionPerformed
        // TODO add your handling code here:
        //AgregarItemComboBoxBanco();
    }//GEN-LAST:event_ComboBoxBancoActionPerformed

    private void ComboBoxRRSSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxRRSSActionPerformed
        // TODO add your handling code here:
        traerIdrrss();
    }//GEN-LAST:event_ComboBoxRRSSActionPerformed

    private void ComboBoxPackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxPackActionPerformed
        // TODO add your handling code here:
        traerIdPack();
    }//GEN-LAST:event_ComboBoxPackActionPerformed

    private void ComboBoxComunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxComunaActionPerformed
        // TODO add your handling code here:
        traerIdComunas();
    }//GEN-LAST:event_ComboBoxComunaActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        // TODO add your handling code here:
        traerClientes();
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void ComboBoxHoraInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxHoraInicioActionPerformed
        // TODO add your handling code here:
        tomarItemHoraInicio();
    }//GEN-LAST:event_ComboBoxHoraInicioActionPerformed

    private void ComboBoxHoraFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxHoraFinalActionPerformed
        // TODO add your handling code here:
        tomarItemHoraFin();
    }//GEN-LAST:event_ComboBoxHoraFinalActionPerformed

    private void btnBuscarConfirmacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarConfirmacionActionPerformed
        // TODO add your handling code here:
        traerClientesConfirmación();
    }//GEN-LAST:event_btnBuscarConfirmacionActionPerformed

    private void tableVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableVentasMouseClicked
        // TODO add your handling code here:
        llamarDatostableVentas();
    }//GEN-LAST:event_tableVentasMouseClicked

    private void TableEstadoDespachoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableEstadoDespachoMouseClicked
        // TODO add your handling code here:
        llamarDatosEstadoDespacho();
    }//GEN-LAST:event_TableEstadoDespachoMouseClicked

    private void ComboBoxEdoEntregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxEdoEntregaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ComboBoxEdoEntregaActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        MostrarTablaVentas();
        MostrarTablaDestinosDespacho();
        MostrarTablaEstadosDespacho();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void btnConfirmarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarPagoActionPerformed
        // TODO add your handling code here:
        MostrarTablaVentas();
    }//GEN-LAST:event_btnConfirmarPagoActionPerformed

    private void btnModificarDespachoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarDespachoActionPerformed
        // TODO add your handling code here:
        MostrarTablaEstadosDespacho();
    }//GEN-LAST:event_btnModificarDespachoActionPerformed

    private void txtBuscarDespacho1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarDespacho1KeyReleased
        // TODO add your handling code here:
        buscarDestinosDespacho(txtBuscarDespacho1.getText());
    }//GEN-LAST:event_txtBuscarDespacho1KeyReleased

    private void txtBuscarDespacho2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarDespacho2KeyReleased
        // TODO add your handling code here:
        buscarEstadosDespacho(txtBuscarDespacho2.getText());
    }//GEN-LAST:event_txtBuscarDespacho2KeyReleased

    private void btnLimpiarDespachoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarDespachoActionPerformed
        // TODO add your handling code here:
        MostrarTablaEstadosDespacho();
    }//GEN-LAST:event_btnLimpiarDespachoActionPerformed

    private void btnLimparDespacho0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparDespacho0ActionPerformed
        // TODO add your handling code here:
        MostrarTablaDestinosDespacho();
    }//GEN-LAST:event_btnLimparDespacho0ActionPerformed

    private void btnLimpiarConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarConfirmaActionPerformed
        // TODO add your handling code here:
        MostrarTablaVentas();
    }//GEN-LAST:event_btnLimpiarConfirmaActionPerformed

    private void btnDescargarDestinosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarDestinosActionPerformed
        // TODO add your handling code here:
        descargarTablaDestinosDespacho();
    }//GEN-LAST:event_btnDescargarDestinosActionPerformed

    private void btnDescargarEstadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarEstadosActionPerformed
        // TODO add your handling code here:
        descargarTablaEstadoDespacho();
    }//GEN-LAST:event_btnDescargarEstadosActionPerformed

    private void btnImprimirDestinosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirDestinosActionPerformed
        // TODO add your handling code here:
        try{
            TableDestinosDespacho.print();
        }catch(PrinterException ex){
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnImprimirDestinosActionPerformed

    private void btnImprimirEdoDespachoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirEdoDespachoActionPerformed
        // TODO add your handling code here:
        try{
            TableEstadoDespacho.print();
        }catch(PrinterException ex){
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnImprimirEdoDespachoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        /*
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventas().setVisible(true);
            }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        /*
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventas().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> ComboBoxBanco;
    public javax.swing.JComboBox<String> ComboBoxComuna;
    public javax.swing.JComboBox<String> ComboBoxEdoEntrega;
    public javax.swing.JComboBox<String> ComboBoxEstadosVenta;
    public javax.swing.JComboBox<String> ComboBoxHoraFinal;
    public javax.swing.JComboBox<String> ComboBoxHoraInicio;
    public javax.swing.JComboBox<String> ComboBoxPack;
    public javax.swing.JComboBox<String> ComboBoxRRSS;
    public com.toedter.calendar.JDateChooser FechaEntrega;
    public javax.swing.JTable TableDestinosDespacho;
    public javax.swing.JTable TableEstadoDespacho;
    public javax.swing.JTextArea TextAreaVentas;
    public javax.swing.JButton btnBuscarCliente;
    public javax.swing.JButton btnBuscarConfirmacion;
    public javax.swing.JButton btnConfirmarPago;
    public javax.swing.JButton btnDescargarDestinos;
    public javax.swing.JButton btnDescargarEstados;
    public javax.swing.JButton btnImprimirDestinos;
    public javax.swing.JButton btnImprimirEdoDespacho;
    public javax.swing.JButton btnLimparDespacho0;
    public javax.swing.JButton btnLimpiarConfirma;
    public javax.swing.JButton btnLimpiarDespacho;
    public javax.swing.JButton btnLimpiarVenta;
    public javax.swing.JButton btnModificarDespacho;
    public javax.swing.JButton btnRegistrarPedido;
    public javax.swing.JButton btnRegregarMenu;
    public com.toedter.calendar.JDateChooser fechaPagoConfirmacion;
    public javax.swing.JButton jButton3;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextPane jTextPane1;
    public javax.swing.JTable tableVentas;
    public javax.swing.JTextField txtBuscarDespacho1;
    public javax.swing.JTextField txtBuscarDespacho2;
    public javax.swing.JTextField txtCodigoTransferencia;
    public javax.swing.JTextField txtComunas;
    public javax.swing.JTextField txtCostoPack;
    public javax.swing.JTextField txtDireccionDestinatario;
    public javax.swing.JTextField txtEmailCliente;
    public javax.swing.JTextField txtHoraFin;
    public javax.swing.JTextField txtHoraIni;
    public javax.swing.JTextField txtIdPedidoDespacho;
    public javax.swing.JTextField txtIdRRSS;
    public javax.swing.JTextField txtNomCliente;
    public javax.swing.JTextField txtNombreClienteConfirmacion;
    public javax.swing.JTextField txtNombreDestinatario;
    public javax.swing.JTextField txtPack;
    public javax.swing.JTextField txtPedidoConfirmacion;
    public javax.swing.JTextField txtRutCliente;
    public javax.swing.JTextField txtRutClienteConfirmacion;
    public javax.swing.JTextArea txtSaludo;
    public javax.swing.JTextField txtTlfCliente;
    // End of variables declaration//GEN-END:variables
class FondoPanel extends JPanel
    {
        private Image imagen;
        
        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/imagenes/Cielo.jpg")).getImage();
            
            g.drawImage(imagen,0, 0, getWidth(), getHeight(),this);
            
            setOpaque(false);
            
            super.paint(g);
        }
    }
}
