package vista;


import java.awt.Graphics;
import java.awt.Image;
import java.awt.print.PrinterException;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.util.Date;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.Conexion;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class informes extends javax.swing.JFrame {
   DefaultListModel modelo = new DefaultListModel();
   informes.FondoPanel fondo = new informes.FondoPanel();
    /**
     * Creates new form informes
     */
    public informes() {
        this.setContentPane(fondo);
        initComponents();
        MostrarInformeVenta();
        MostrarInfCliente();
        MostrarInventario01();
        MostrarDevCambios();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    //---------------Codigo de Nicole------------------

private void MostrarInformeVenta(){
    
     //Tabla de Informe de Venta
        try{    
            DefaultTableModel modeloInfVenta = new DefaultTableModel();
            
            tableInf_Venta.setModel(modeloInfVenta);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            
            String sql = "SELECT venta.idventa, venta.rut_cliente, cliente.cli_nombre, venta.vta_fecha_venta, venta.vta_fecha_entrega, pack.pck_nombre, venta.vta_total from venta left join cliente on venta.rut_cliente=cliente.RUT left join pack on venta.id_pack=pack.idpack where venta.id_estados_venta=1";
            
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
            modeloInfVenta.addColumn("Numero Pedido");
            modeloInfVenta.addColumn("Rut Ciente");
            modeloInfVenta.addColumn("Nombre Cliente");
            modeloInfVenta.addColumn("Fecha de Compra");
            modeloInfVenta.addColumn("Fecha de Entrega");
            modeloInfVenta.addColumn("Pack vendido");
            modeloInfVenta.addColumn("Monto");
                        
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modeloInfVenta.addRow(filas); 
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }

public void buscarRangoFechasVenta(){
        try{
            Date date1 = DateChooserVenta1.getDate();
	    long d1 = date1.getTime();
	    java.sql.Date fecha1 = new java.sql.Date(d1);

	    Date date2 = DateChooserVenta2.getDate();
	    long d2 = date2.getTime();
	    java.sql.Date fecha2 = new java.sql.Date(d2);
	    
	    DefaultTableModel modeloInfVenta = new DefaultTableModel();
            tableInf_Venta.setModel(modeloInfVenta);

            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            String sql ="SELECT venta.idventa, venta.rut_cliente, cliente.cli_nombre, venta.vta_fecha_venta, venta.vta_fecha_entrega, pack.pck_nombre, venta.vta_total from venta left join cliente on venta.rut_cliente=cliente.RUT left join pack on venta.id_pack=pack.idpack WHERE (venta.id_estados_venta=1) AND (venta.vta_fecha_venta BETWEEN '"+fecha1.toString()+"' AND '"+fecha2.toString()+"')";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
	    ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
	    modeloInfVenta.addColumn("Numero Pedido");
            modeloInfVenta.addColumn("Rut Ciente");
            modeloInfVenta.addColumn("Nombre Cliente");
            modeloInfVenta.addColumn("Fecha de Compra");
            modeloInfVenta.addColumn("Fecha de Entrega");
            modeloInfVenta.addColumn("Pack vendido");
            modeloInfVenta.addColumn("Monto");

            while(rs.next()){
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modeloInfVenta.addRow(filas); 
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }



public DefaultTableModel buscarPorRUT(String buscar, JTable tabla){
    
        //Metodo para buscar en tabla de articulos
        DefaultTableModel modelo2 = new DefaultTableModel();
        tabla.setModel(modelo2);
        
        PreparedStatement ps = null;
        ResultSet rs = null;
            
        Conexion conn = new Conexion();
        Connection con = conn.getConexion();
        
        String sql = "SELECT venta.idventa, venta.rut_cliente, cliente.cli_nombre, venta.vta_fecha_venta, venta.vta_fecha_entrega, pack.pck_nombre, venta.vta_total from venta left join cliente on venta.rut_cliente=cliente.RUT left join pack on venta.id_pack=pack.idpack WHERE (venta.id_estados_venta='1') AND (venta.rut_cliente LIKE '%"+buscar+"%')";
        
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
            modelo2.addColumn("Numero Pedido");
            modelo2.addColumn("Rut Ciente");
            modelo2.addColumn("Nombre Cliente");
            modelo2.addColumn("Fecha de Compra");
            modelo2.addColumn("Fecha de Entrega");
            modelo2.addColumn("Pack vendido");
            modelo2.addColumn("Monto");
            
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modelo2.addRow(filas); 
            }
            
            rs.close();
            
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        return null;
    
    }




    //---------------Codigo de Jessica------------------

private void MostrarInfCliente(){
    //Tabla de InfCliente
        try{    
            DefaultTableModel modeloInfCliente = new DefaultTableModel();
            
            TablaInfCliente.setModel(modeloInfCliente);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            
            String sql = "SELECT venta.id_pack, venta.rut_cliente, cliente.cli_nombre, cliente.cli_apellido, pack.pck_nombre, venta.vta_fecha_venta, estados_despacho.estados_despacho_name, comunas.nombre_comunas from venta left join pack on venta.id_pack=pack.idpack left join cliente on venta.rut_cliente=cliente.RUT left join comunas on venta.id_comuna=comunas.idcomunas left join estados_despacho on venta.estado_despacho=estados_despacho.idestados_despacho where venta.estado_despacho='4'";
            
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
            modeloInfCliente.addColumn("Id Pack");
            modeloInfCliente.addColumn("Rut Cliente");
            modeloInfCliente.addColumn("Nombre Cliente");
            modeloInfCliente.addColumn("Apellido Cliente");
            modeloInfCliente.addColumn("Pack");
            modeloInfCliente.addColumn("Fecha Pedido");
            modeloInfCliente.addColumn("Estado Despacho");
            modeloInfCliente.addColumn("Comuna");
                         
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modeloInfCliente.addRow(filas); 
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }


public DefaultTableModel buscarPorRUT2(String buscar, JTable tabla){
    
        //Metodo para buscar en tabla de articulos
        DefaultTableModel modelo2 = new DefaultTableModel();
        tabla.setModel(modelo2);
        
        PreparedStatement ps = null;
        ResultSet rs = null;
            
        Conexion conn = new Conexion();
        Connection con = conn.getConexion();
        
        String sql = "SELECT venta.id_pack, venta.rut_cliente, cliente.cli_nombre, cliente.cli_apellido, pack.pck_nombre, venta.vta_fecha_venta, estados_despacho.estados_despacho_name, comunas.nombre_comunas from venta left join pack on venta.id_pack=pack.idpack left join cliente on venta.rut_cliente=cliente.RUT left join comunas on venta.id_comuna=comunas.idcomunas left join estados_despacho on venta.estado_despacho=estados_despacho.idestados_despacho WHERE (venta.estado_despacho='4') AND (venta.rut_cliente LIKE '%"+buscar+"%')";
        
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
                       
            modelo2.addColumn("Id Pack");
            modelo2.addColumn("Rut Cliente");
            modelo2.addColumn("Nombre Cliente");
            modelo2.addColumn("Apellido Cliente");
            modelo2.addColumn("Pack");
            modelo2.addColumn("Fecha Pedido");
            modelo2.addColumn("Estado Despacho");
            modelo2.addColumn("Comuna");
            
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modelo2.addRow(filas); 
            }
            
            rs.close();
            
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
        return null;
    
    }

public void buscarRangoFechasClientes(){
        try{
            Date date1 = DateChooserCliente1.getDate();
	    long d1 = date1.getTime();
	    java.sql.Date fecha1 = new java.sql.Date(d1);

	    Date date2 = DateChooserCliente2.getDate();
	    long d2 = date2.getTime();
	    java.sql.Date fecha2 = new java.sql.Date(d2);
	    
	    DefaultTableModel modeloInfCliente = new DefaultTableModel();
            TablaInfCliente.setModel(modeloInfCliente);

            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            String sql ="SELECT venta.id_pack, venta.rut_cliente, cliente.cli_nombre, cliente.cli_apellido, pack.pck_nombre, venta.vta_fecha_venta, estados_despacho.estados_despacho_name, comunas.nombre_comunas from venta left join pack on venta.id_pack=pack.idpack left join cliente on venta.rut_cliente=cliente.RUT left join comunas on venta.id_comuna=comunas.idcomunas left join estados_despacho on venta.estado_despacho=estados_despacho.idestados_despacho WHERE (venta.estado_despacho='4') AND (venta.vta_fecha_venta BETWEEN '"+fecha1.toString()+"' AND '"+fecha2.toString()+"')";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
	    ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
	    modeloInfCliente.addColumn("Id Pack");
            modeloInfCliente.addColumn("Rut Cliente");
            modeloInfCliente.addColumn("Nombre Cliente");
            modeloInfCliente.addColumn("Apellido Cliente");
            modeloInfCliente.addColumn("Pack");
            modeloInfCliente.addColumn("Fecha Pedido");
            modeloInfCliente.addColumn("Estado Despacho");
            modeloInfCliente.addColumn("Comuna");

            while(rs.next()){
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modeloInfCliente.addRow(filas); 
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }



private void MostrarDevCambios(){
    //Tabla de InfDevCambios
        try{    
            DefaultTableModel modeloDevCambios = new DefaultTableModel();
            
            TablaDevCambios.setModel(modeloDevCambios);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            
            String sql = "SELECT venta.idventa, pack.pck_nombre, venta.vta_nombre_destinatario, venta.vta_fecha_entrega, concat(venta.vta_hora_entrega_inicial, '-' ,venta.vta_hora_entrega_final) as Rango_Hora, comunas.nombre_comunas, estados_despacho.estados_despacho_name from venta left join comunas on venta.id_comuna=comunas.idcomunas left join pack on venta.id_pack=pack.idpack left join cliente on venta.rut_cliente=cliente.RUT left join estados_despacho on venta.estado_despacho=estados_despacho.idestados_despacho where venta.estado_despacho <> 4";

          
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
            modeloDevCambios.addColumn("Id Venta");
            modeloDevCambios.addColumn("Pack");
            modeloDevCambios.addColumn("Destinatario");
            modeloDevCambios.addColumn("Fecha de Entrega");
            modeloDevCambios.addColumn("Hora de Entrega");
            modeloDevCambios.addColumn("Comuna");
            modeloDevCambios.addColumn("Devolucion");
                                     
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modeloDevCambios.addRow(filas); 
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }

public void buscarRangoFechasDevol(){
        try{
            Date date1 = DateChooserDevol1.getDate();
	    long d1 = date1.getTime();
	    java.sql.Date fecha1 = new java.sql.Date(d1);

	    Date date2 = DateChooserDevol2.getDate();
	    long d2 = date2.getTime();
	    java.sql.Date fecha2 = new java.sql.Date(d2);
	    
	    DefaultTableModel modeloDevCambios = new DefaultTableModel();
            TablaDevCambios.setModel(modeloDevCambios);

            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            String sql ="SELECT venta.idventa, pack.pck_nombre, venta.vta_nombre_destinatario, venta.vta_fecha_entrega, concat(venta.vta_hora_entrega_inicial, '-' ,venta.vta_hora_entrega_final) as Rango_Hora, comunas.nombre_comunas, estados_despacho.estados_despacho_name from venta left join comunas on venta.id_comuna=comunas.idcomunas left join pack on venta.id_pack=pack.idpack left join cliente on venta.rut_cliente=cliente.RUT left join estados_despacho on venta.estado_despacho=estados_despacho.idestados_despacho WHERE (venta.estado_despacho <> '4') AND (venta.vta_fecha_entrega BETWEEN '"+fecha1.toString()+"' AND '"+fecha2.toString()+"')";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
	    ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
	    modeloDevCambios.addColumn("Id Venta");
            modeloDevCambios.addColumn("Pack");
            modeloDevCambios.addColumn("Destinatario");
            modeloDevCambios.addColumn("Fecha de Entrega");
            modeloDevCambios.addColumn("Hora de Entrega");
            modeloDevCambios.addColumn("Comuna");
            modeloDevCambios.addColumn("Devolucion");

            while(rs.next()){
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modeloDevCambios.addRow(filas); 
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }


/**************************** Codigo Cristian ********************************/
private void MostrarInventario01(){
    //Tabla de Inventario
        try{    
            DefaultTableModel modeloInventario01 = new DefaultTableModel();
            tablaInventario01.setModel(modeloInventario01);
            
            //TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(modeloInventario01);
            //tablaInventario01.setRowSorter(elQueOrdena);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            
            String sql = "SELECT DISTINCT articulo.idarticulo, articulo.art_estado, articulo.art_descripcion, articulo.art_fecha_vencimiento, articulo.art_stock, SUM(DISTINCT COALESCE(detalle_factura.det_cantidad,0)) as comprado, ((articulo.art_stock) + (SUM(DISTINCT COALESCE(detalle_factura.det_cantidad,0)))) as total1, SUM(DISTINCT COALESCE(pack.pck_stock,0)) as total_PACK, (((articulo.art_stock) + (SUM(DISTINCT COALESCE(detalle_factura.det_cantidad,0)))) - (SUM(DISTINCT COALESCE(pack.pck_stock,0)))) as stock_final FROM articulo LEFT JOIN detalle_factura ON articulo.idarticulo = detalle_factura.id_articulo_pk LEFT JOIN articulo_has_pack ON articulo.idarticulo = articulo_has_pack.id_articulo_art LEFT JOIN pack ON articulo_has_pack.id_pack_pck = pack.idpack WHERE articulo.art_estado = '1' GROUP BY articulo.idarticulo, articulo_has_pack.id_articulo_art ORDER BY stock_final DESC";
            
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
            modeloInventario01.addColumn("Id Articulo");
            modeloInventario01.addColumn("Estado");
            modeloInventario01.addColumn("Articulo");
            modeloInventario01.addColumn("Fecha Vencimiento");
            modeloInventario01.addColumn("Stock");
            modeloInventario01.addColumn("Comprado");
            modeloInventario01.addColumn("Total Art");
            modeloInventario01.addColumn("Total Pack");
            modeloInventario01.addColumn("Stock F");
                         
            while(rs.next()){
                
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modeloInventario01.addRow(filas); 
            }
        
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }


public void buscarRangoFechasInventario(){
        try{
            Date date1 = FDesdeInvt.getDate();
	    long d1 = date1.getTime();
	    java.sql.Date fecha1 = new java.sql.Date(d1);

	    Date date2 = FHastaInvt.getDate();
	    long d2 = date2.getTime();
	    java.sql.Date fecha2 = new java.sql.Date(d2);
	    
	    DefaultTableModel modeloInventario01 = new DefaultTableModel();
            tablaInventario01.setModel(modeloInventario01);

            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            String sql ="SELECT DISTINCT articulo.idarticulo, articulo.art_estado, articulo.art_descripcion, articulo.art_fecha_vencimiento, articulo.art_stock, SUM(DISTINCT COALESCE(detalle_factura.det_cantidad,0)) as comprado, ((articulo.art_stock) + (SUM(DISTINCT COALESCE(detalle_factura.det_cantidad,0)))) as total1, SUM(DISTINCT COALESCE(pack.pck_stock,0)) as total_PACK, (((articulo.art_stock) + (SUM(DISTINCT COALESCE(detalle_factura.det_cantidad,0)))) - (SUM(DISTINCT COALESCE(pack.pck_stock,0)))) as stock_final FROM articulo LEFT JOIN detalle_factura ON articulo.idarticulo = detalle_factura.id_articulo_pk LEFT JOIN articulo_has_pack ON articulo.idarticulo = articulo_has_pack.id_articulo_art LEFT JOIN pack ON articulo_has_pack.id_pack_pck = pack.idpack WHERE (articulo.art_estado = '1') AND (articulo.art_fecha_vencimiento BETWEEN '"+fecha1.toString()+"' AND '"+fecha2.toString()+"') GROUP BY articulo.idarticulo, articulo_has_pack.id_articulo_art ORDER BY stock_final DESC";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
	    ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadColumnas = rsMd.getColumnCount();
            
	    modeloInventario01.addColumn("Id Articulo");
            modeloInventario01.addColumn("Estado");
            modeloInventario01.addColumn("Articulo");
            modeloInventario01.addColumn("Fecha Vencimiento");
            modeloInventario01.addColumn("Stock");
            modeloInventario01.addColumn("Comprado");
            modeloInventario01.addColumn("Total Art");
            modeloInventario01.addColumn("Total Pack");
            modeloInventario01.addColumn("Stock F");

            while(rs.next()){
                Object[] filas = new Object[CantidadColumnas];
                
                for(int i=0; i < CantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                modeloInventario01.addRow(filas); 
            }
            rs.close();
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }

//Metodo General para descargar tablas en Excel
    private void descargarTablas(JTable tabla) {
        //Definimos modelos de la Tabla con los datos
        DefaultTableModel modelo1 = new DefaultTableModel();
        modelo1 = (DefaultTableModel) tabla.getModel();
        
        //definimos las variables con las vamos hacer la exportacion por Libreria netbeans
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;
        
        //Selecciona locación para descargar
        JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\usuario\\Desktop");
        //Nombre de cuadro de dialogo
        excelFileChooser.setDialogTitle("Salvar como");
        //Solo extensiona validas de excel para descargar
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        //Muesta el cuadro de dialogo
        int excelChooser = excelFileChooser.showSaveDialog(null);
        
        //Si el boton Salvar del cuadro de diáloo es apretado
        if(excelChooser == JFileChooser.APPROVE_OPTION){
            try{
                //instanciamos excel poi libreria a netbeans
                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("Tabla");
                
                //Agregamos los nombres de las columnas
                XSSFRow rowCol = excelSheet.createRow(0);
                for(int i=0; i<modelo1.getColumnCount();i++){
                    XSSFCell cell = rowCol.createCell(i);
                    cell.setCellValue(modelo1.getColumnName(i));
                }
                
                //usar un loop para obtener filas y columnas de la Jtable
                for(int j=0; j<modelo1.getRowCount(); j++){
                    XSSFRow excelRow = excelSheet.createRow(j+1);
                    for(int k=0; k < modelo1.getColumnCount(); k++){
                        XSSFCell excelCell = excelRow.createCell(k);
                        excelCell.setCellValue(modelo1.getValueAt(j, k).toString());
                    }
                }
                //Agregar extención xlsx al fichero excel
                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile()+".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Tabla Descargada Exitosamente!!");
            }catch(FileNotFoundException ex){
                //ex.printStackTrace();
                System.err.println(ex.toString());
            } catch (IOException ex) {
                Logger.getLogger(informes.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try{
                    if(excelBOU != null){
                        excelBOU.close();
                    }
                    if(excelFOU != null){
                        excelFOU.close();
                    }
                    if(excelJTableExporter != null){
                        excelJTableExporter.close();
                    }
                }catch(IOException ex){
                    //ex.printStackTrace();
                    System.err.println(ex.toString());
                }
            }
        }
        
    }
    
    //Metodo General para Imprimir
    private void imprimirTablas(JTable tabla){
        try{
            tabla.print();
        }catch(PrinterException ex){
            System.err.println(ex.toString());
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRegregarMenu = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new FondoPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableInf_Venta = new javax.swing.JTable();
        jPanel5 = new FondoPanel();
        jLabel1 = new javax.swing.JLabel();
        DateChooserVenta1 = new com.toedter.calendar.JDateChooser();
        DateChooserVenta2 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRUTVenta = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        btnLimpiarVentas = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnImprVentas = new javax.swing.JButton();
        btndescargarVentas = new javax.swing.JButton();
        jPanel2 = new FondoPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaInventario01 = new javax.swing.JTable();
        jPanel6 = new FondoPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        FDesdeInvt = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        FHastaInvt = new com.toedter.calendar.JDateChooser();
        btnBuscarInvent = new javax.swing.JButton();
        btnLimpiarInventario = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        btnImprInvent = new javax.swing.JButton();
        btndescargarInvent = new javax.swing.JButton();
        jPanel3 = new FondoPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaInfCliente = new javax.swing.JTable();
        jPanel7 = new FondoPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        DateChooserCliente1 = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        DateChooserCliente2 = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        txtRUTClientes = new javax.swing.JTextField();
        btnLimpiarClientes = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        btnImprClientes = new javax.swing.JButton();
        btndescargarClientes = new javax.swing.JButton();
        jPanel4 = new FondoPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaDevCambios = new javax.swing.JTable();
        jPanel8 = new FondoPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        DateChooserDevol1 = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        DateChooserDevol2 = new com.toedter.calendar.JDateChooser();
        jButton5 = new javax.swing.JButton();
        btnLimpiarDevol = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        btnImprDevol = new javax.swing.JButton();
        btndescargarDevol = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRegregarMenu.setText("Regresar a Menú Principal");
        btnRegregarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegregarMenuActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegregarMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        tableInf_Venta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Numero Pedido", "Rut Ciente", "Nombre Cliente", "Fecha de Compra", "Fecha de Entrega", "Pack vendido", "Monto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableInf_Venta);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Busqueda Ventas", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel1.setText("Busqueda por Rango de Fecha");

        DateChooserVenta1.setDateFormatString("y-MM-dd");

        DateChooserVenta2.setDateFormatString("y-MM-dd");

        jLabel2.setText("Desde: ");

        jLabel3.setText("Hasta: ");

        jLabel4.setText("Busqueda por RUT:");

        txtRUTVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRUTVentaKeyReleased(evt);
            }
        });

        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnLimpiarVentas.setText("Limpiar");
        btnLimpiarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarVentasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(267, 267, 267))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel2))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(DateChooserVenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(DateChooserVenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtRUTVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpiarVentas)))
                .addGap(27, 27, 27)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(DateChooserVenta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DateChooserVenta2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jButton2))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtRUTVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(32, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpiarVentas)
                        .addGap(19, 19, 19))))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("DETALLE DE VENTAS REALIZADAS");

        btnImprVentas.setText("Imprimir");
        btnImprVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprVentasActionPerformed(evt);
            }
        });

        btndescargarVentas.setText("Descargar");
        btndescargarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndescargarVentasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(107, 107, 107))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImprVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148)
                .addComponent(btndescargarVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprVentas)
                    .addComponent(btndescargarVentas))
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Informe Ventas", jPanel1);

        tablaInventario01.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Articulo", "Estado", "Articulo", "Fecha Vencimiento", "Stock", "Comprado", "Total_Art", "Total Pack", "Stock F"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaInventario01);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informe Inventario", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setText("Busqueda por Rango de Fecha");
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(283, 24, -1, -1));

        jLabel8.setText("Desde: ");
        jPanel6.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        FDesdeInvt.setDateFormatString("y-MM-dd");
        jPanel6.add(FDesdeInvt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 154, -1));

        jLabel9.setText("Hasta: ");
        jPanel6.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, -1, -1));

        FHastaInvt.setDateFormatString("y-MM-dd");
        jPanel6.add(FHastaInvt, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 154, -1));

        btnBuscarInvent.setText("Buscar");
        btnBuscarInvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarInventActionPerformed(evt);
            }
        });
        jPanel6.add(btnBuscarInvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, -1, -1));

        btnLimpiarInventario.setText("Limpiar");
        btnLimpiarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarInventarioActionPerformed(evt);
            }
        });
        jPanel6.add(btnLimpiarInventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 110, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setText("DETALLE INVENTARIO");

        btnImprInvent.setText("Imprimir");
        btnImprInvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprInventActionPerformed(evt);
            }
        });

        btndescargarInvent.setText("Descargar");
        btndescargarInvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndescargarInventActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(btnImprInvent, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btndescargarInvent, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprInvent)
                    .addComponent(btndescargarInvent))
                .addGap(35, 35, 35))
        );

        jTabbedPane1.addTab("Informe Inventario", jPanel2);

        TablaInfCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Pack", "Rut Cliente", "Nombre Cliente", "Apellido Cliente", "Pack", "Fecha Pedido", "Estado Despacho", "Comuna"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TablaInfCliente);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informe Clientes", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel10.setText("Busqueda por Rango de Fecha");

        jLabel12.setText("Desde: ");

        DateChooserCliente1.setDateFormatString("y-MM-dd");

        jLabel13.setText("Hasta: ");

        DateChooserCliente2.setDateFormatString("y-MM-dd");

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel20.setText("Busqueda por RUT:");

        txtRUTClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRUTClientesKeyReleased(evt);
            }
        });

        btnLimpiarClientes.setText("Limpiar");
        btnLimpiarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarClientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(jLabel10))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(29, 29, 29)
                                .addComponent(DateChooserCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel13))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRUTClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(DateChooserCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jButton4))
                            .addComponent(btnLimpiarClientes))))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(DateChooserCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DateChooserCliente2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12))
                    .addComponent(jButton4))
                .addGap(30, 30, 30)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtRUTClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiarClientes))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setText("DETALLE DE DISTRIBUICIÓN DE PACK");

        btnImprClientes.setText("Imprimir");
        btnImprClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprClientesActionPerformed(evt);
            }
        });

        btndescargarClientes.setText("Descargar");
        btndescargarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndescargarClientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(198, 198, 198))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(btnImprClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(148, 148, 148)
                                .addComponent(btndescargarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(205, 205, 205))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprClientes)
                    .addComponent(btndescargarClientes))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Informe Clientes", jPanel3);

        TablaDevCambios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Venta", "Pack", "Destinatario", "Fecha de Entrega", "Hora de Entrega", "Comuna", "Devolución"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(TablaDevCambios);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informe Devolución y Cambios", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel11.setText("Busqueda por Rango de Fecha");

        jLabel14.setText("Desde: ");

        DateChooserDevol1.setDateFormatString("y-MM-dd");

        jLabel15.setText("Hasta: ");

        DateChooserDevol2.setDateFormatString("y-MM-dd");

        jButton5.setText("Buscar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        btnLimpiarDevol.setText("Limpiar");
        btnLimpiarDevol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarDevolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(jLabel11))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel14)
                        .addGap(29, 29, 29)
                        .addComponent(DateChooserDevol1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(DateChooserDevol2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLimpiarDevol)
                            .addComponent(jButton5))))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(DateChooserDevol1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DateChooserDevol2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14))
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(btnLimpiarDevol)
                .addGap(22, 22, 22))
        );

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel23.setText("DETALLE DE DEVOLUCIONES Y CAMBIOS");

        btnImprDevol.setText("Imprimir");
        btnImprDevol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprDevolActionPerformed(evt);
            }
        });

        btndescargarDevol.setText("Descargar");
        btndescargarDevol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndescargarDevolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel23)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImprDevol, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148)
                .addComponent(btndescargarDevol, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel23)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprDevol)
                    .addComponent(btndescargarDevol))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Informe Dev & Cambios", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 64, 770, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegregarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegregarMenuActionPerformed
        // TODO add your handling code here:
        menu menuppal = new menu();

        menuppal.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegregarMenuActionPerformed

    private void btnImprInventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprInventActionPerformed
        // TODO add your handling code here:
        /*
        try{
            tablaInventario01.print();
        }catch(PrinterException ex){
            System.err.println(ex.toString());
        }*/
        imprimirTablas(tablaInventario01);
    }//GEN-LAST:event_btnImprInventActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        MostrarInventario01();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void btndescargarInventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndescargarInventActionPerformed
        // TODO add your handling code here:
        descargarTablas(tablaInventario01);
    }//GEN-LAST:event_btndescargarInventActionPerformed

    private void txtRUTVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRUTVentaKeyReleased
        // TODO add your handling code here:
        buscarPorRUT(txtRUTVenta.getText(),tableInf_Venta);
    }//GEN-LAST:event_txtRUTVentaKeyReleased

    private void txtRUTClientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRUTClientesKeyReleased
        // TODO add your handling code here:
        buscarPorRUT2(txtRUTClientes.getText(), TablaInfCliente);
    }//GEN-LAST:event_txtRUTClientesKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        buscarRangoFechasVenta();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        buscarRangoFechasDevol();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        buscarRangoFechasClientes();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnBuscarInventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarInventActionPerformed
        // TODO add your handling code here:
        buscarRangoFechasInventario();
    }//GEN-LAST:event_btnBuscarInventActionPerformed

    private void btnImprVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprVentasActionPerformed
        // TODO add your handling code here:
        imprimirTablas(tableInf_Venta);
    }//GEN-LAST:event_btnImprVentasActionPerformed

    private void btndescargarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndescargarVentasActionPerformed
        // TODO add your handling code here:
        descargarTablas(tableInf_Venta);
    }//GEN-LAST:event_btndescargarVentasActionPerformed

    private void btnImprClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprClientesActionPerformed
        // TODO add your handling code here:
        imprimirTablas(TablaInfCliente);
    }//GEN-LAST:event_btnImprClientesActionPerformed

    private void btndescargarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndescargarClientesActionPerformed
        // TODO add your handling code here:
        descargarTablas(TablaInfCliente);
    }//GEN-LAST:event_btndescargarClientesActionPerformed

    private void btnImprDevolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprDevolActionPerformed
        // TODO add your handling code here:
        imprimirTablas(TablaDevCambios);
    }//GEN-LAST:event_btnImprDevolActionPerformed

    private void btndescargarDevolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndescargarDevolActionPerformed
        // TODO add your handling code here:
        descargarTablas(TablaDevCambios);
    }//GEN-LAST:event_btndescargarDevolActionPerformed

    private void btnLimpiarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarVentasActionPerformed
        // TODO add your handling code here:
        txtRUTVenta.setText(null);
        DateChooserVenta1.setCalendar(null);
        DateChooserVenta2.setCalendar(null);
        MostrarInformeVenta();
    }//GEN-LAST:event_btnLimpiarVentasActionPerformed

    private void btnLimpiarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarInventarioActionPerformed
        // TODO add your handling code here:
        FDesdeInvt.setCalendar(null);
        FHastaInvt.setCalendar(null);
        MostrarInventario01();
    }//GEN-LAST:event_btnLimpiarInventarioActionPerformed

    private void btnLimpiarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarClientesActionPerformed
        // TODO add your handling code here:
        txtRUTClientes.setText(null);
        DateChooserCliente1.setCalendar(null);
        DateChooserCliente2.setCalendar(null);
        MostrarInfCliente();
    }//GEN-LAST:event_btnLimpiarClientesActionPerformed

    private void btnLimpiarDevolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarDevolActionPerformed
        // TODO add your handling code here:
        DateChooserDevol1.setCalendar(null);
        DateChooserDevol2.setCalendar(null);
        MostrarDevCambios();
    }//GEN-LAST:event_btnLimpiarDevolActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(informes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(informes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(informes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(informes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new informes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public com.toedter.calendar.JDateChooser DateChooserCliente1;
    public com.toedter.calendar.JDateChooser DateChooserCliente2;
    public com.toedter.calendar.JDateChooser DateChooserDevol1;
    public com.toedter.calendar.JDateChooser DateChooserDevol2;
    public com.toedter.calendar.JDateChooser DateChooserVenta1;
    public com.toedter.calendar.JDateChooser DateChooserVenta2;
    public com.toedter.calendar.JDateChooser FDesdeInvt;
    public com.toedter.calendar.JDateChooser FHastaInvt;
    public javax.swing.JTable TablaDevCambios;
    public javax.swing.JTable TablaInfCliente;
    private javax.swing.JButton btnBuscarInvent;
    private javax.swing.JButton btnImprClientes;
    private javax.swing.JButton btnImprDevol;
    private javax.swing.JButton btnImprInvent;
    private javax.swing.JButton btnImprVentas;
    public javax.swing.JButton btnLimpiarClientes;
    public javax.swing.JButton btnLimpiarDevol;
    public javax.swing.JButton btnLimpiarInventario;
    public javax.swing.JButton btnLimpiarVentas;
    public javax.swing.JButton btnRegregarMenu;
    private javax.swing.JButton btndescargarClientes;
    private javax.swing.JButton btndescargarDevol;
    private javax.swing.JButton btndescargarInvent;
    private javax.swing.JButton btndescargarVentas;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JTable tablaInventario01;
    public javax.swing.JTable tableInf_Venta;
    private javax.swing.JTextField txtRUTClientes;
    private javax.swing.JTextField txtRUTVenta;
    // End of variables declaration//GEN-END:variables
class FondoPanel extends JPanel
    {
        private Image imagen;
        
        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/imagenes/Cielo.jpg")).getImage();
            
            g.drawImage(imagen,0, 0, getWidth(), getHeight(),this);
            
            setOpaque(false);
            super.paint(g);
        }  
            
    }    
}
